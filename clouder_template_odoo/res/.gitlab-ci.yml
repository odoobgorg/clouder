image: ubuntu:latest

variables:
  VERSION: "9.0"
  TESTS: "0"
  LINT_CHECK: "0"
  TRANSIFEX: "0"
  CONTAINER_TEST_IMAGE: $REGISTRY_DOMAIN/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_BUILD_REF_NAME
  CONTAINER_RELEASE_IMAGE: $REGISTRY_DOMAIN/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest

#before_script:
#  - apt-get update
#  - apt-get install -qq git python-lxml python-setuptools python-pip expect-dev wget npm
#  - pip install --upgrade pip
#  - git clone https://github.com/OCA/maintainer-quality-tools.git ${HOME}/maintainer-quality-tools
#  - export PATH=${HOME}/maintainer-quality-tools/travis:${PATH}
#  - travis_install_nightly

stages:
  - build
  - test
  - release
  - staging
  - deploy

build:
  image: docker:1.10.3
#  services:
#  - docker:dind
  stage: build
  before_script:
    - docker login -u $CI_PROJECT_NAME -p $REGISTRY_PASSWORD -e admin@example.net $REGISTRY_DOMAIN
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

lint:
  variables:
    LINT_CHECK: "1"
  script:
    - echo "Temp"
#    - travis_run_tests
  stage: test

test:
  variables:
    TESTS: "1"
    ODOO_REPO: "odoo/odoo"
  script:
     - echo "Temp" 
#    - travis_run_tests
  stage: test

release:
  image: docker:1.10.3
#  services:
#  - docker:dind
  stage: release
  before_script:
    - docker login -u $CI_PROJECT_NAME -p $REGISTRY_PASSWORD -e admin@example.net $REGISTRY_DOMAIN
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master

staging:
  stage: staging
  before_script:
    - apt-get -qq update && DEBIAN_FRONTEND=noninteractive apt-get -y -qq install curl
  script:
    - 'curl -H "Accept: application/json" -d tgt=$STAGING_SERVER -d container_name=$CI_PROJECT_NAME -d secretkey=$STAGING_PASSWORD -d image=$CONTAINER_TEST_IMAGE -k https://$SALT_DOMAIN/hook/container_deploy'
  only:
    - master

deploy:
  stage: deploy
  before_script:
    - apt-get -qq update && DEBIAN_FRONTEND=noninteractive apt-get -y -qq install curl
  script:
    - 'curl -H "Accept: application/json" -d tgt=$PRODUCTION_SERVER -d container_name=$CI_PROJECT_NAME -d secretkey=$PRODUCTION_PASSWORD -d image=$CONTAINER_TEST_IMAGE -k https://$SALT_DOMAIN/hook/container_deploy'
  only:
    - master
  when: manual
